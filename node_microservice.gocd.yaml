---
format_version: 10
common:
  deploy-tasks: &deploy-tasks
    - exec:
        command: bash
        arguments:
          - -c
          - echo "Deployment to ${ENV_NAME} environment"
  test-tasks: &test-tasks
    - exec:
        command: bash
        arguments:
          - -c
          - echo "Testing on ${ENV_NAME} environment"
    - exec:
        command: bash
        arguments:
          - -c
          - docker run --network=host -d -t --name api_test_executor_${ENV_NAME} api_test_executor:latest
    - exec:
        command: bash
        arguments:
          - -c
          - docker exec api_test_executor_${environment} cucumber --tags=@${ENV_NAME} --format html --out test-output/report.html
    - exec:
        run_if: any
        command: bash
        arguments:
          - -c
          - docker cp api_test_executor_${ENV_NAME}:/usr/src/api-tests/test-output/report.html report_${ENV_NAME}.html
    - exec:
        run_if: any
        command: bash
        arguments:
          - -c
          - docker rm -f api_test_executor_${ENV_NAME}
    - exec:
        run_if: failed
        command: bash
        arguments:
          - -c
          - echo "Send notification with failed status"
    - exec:
        run_if: passed
        command: bash
        arguments:
          - -c
          - echo "Send notification with passed status"
    


    


pipelines:
  node-microservice:
    group: microservices
    materials:
      gitrepo:
        git: https://github.com/mtararujs/ci_course.git
        branch: main
    stages:
      - build:
          jobs:
            build:
              tasks:
               - exec:
                   command: bash
                   arguments:
                    - -c
                    - echo "Building application"
      - deploy-dev:
          environment_variables:
              ENV_NAME: dev
          jobs:
            deploy:
              tasks: *deploy-tasks
      - test-dev:
          environment_variables:
              ENV_NAME: dev
          jobs:
            test:
              artifact:
                - build:
                   source: report_dev.html
                   destination: test-output
              tabs:
                TestReport: test-output/report_dev.html
              tasks: *test-tasks
      - deploy-int:
          environment_variables:
              ENV_NAME: int
          jobs:
            deploy:
              tasks: *deploy-tasks
      - test-int:
          environment_variables:
              ENV_NAME: int
          jobs:
            test:
              artifact:
                - build:
                   source: report_int.html
                   destination: test-output
              tabs:
                TestReport: test-output/report_int.html
              tasks: *test-tasks
      - deploy-prd:
          environment_variables:
              ENV_NAME: prd
          jobs:
            deploy:
              tasks: *deploy-tasks
      - test-prd:
          environment_variables:
              ENV_NAME: prd
          jobs:
            test:
              artifact:
                - build:
                   source: report_prd.html
                   destination: test-output
              tabs:
                TestReport: test-output/report_prd.html
              tasks: *test-tasks
